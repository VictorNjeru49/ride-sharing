/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UserRouteImport } from './routes/user'
import { Route as RequestsRouteImport } from './routes/requests'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as PaymentsRouteImport } from './routes/payments'
import { Route as PaymentSuccessRouteImport } from './routes/payment-success'
import { Route as PaymentCancelRouteImport } from './routes/payment-cancel'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DriverRouteImport } from './routes/driver'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as ChatbotRouteImport } from './routes/chatbot'
import { Route as AboutRouteImport } from './routes/about'
import { Route as VehiclesRouteImport } from './routes/Vehicles'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserIndexRouteImport } from './routes/user/index'
import { Route as DriverIndexRouteImport } from './routes/driver/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as ChatbotIndexRouteImport } from './routes/chatbot/index'
import { Route as VehiclesIndexRouteImport } from './routes/Vehicles/index'
import { Route as UserWalletRouteImport } from './routes/user/wallet'
import { Route as UserUserprofileRouteImport } from './routes/user/userprofile'
import { Route as UserTripsRouteImport } from './routes/user/trips'
import { Route as UserSupportRouteImport } from './routes/user/support'
import { Route as UserRidehistoryRouteImport } from './routes/user/ridehistory'
import { Route as UserReviewsRouteImport } from './routes/user/reviews'
import { Route as UserInboxRouteImport } from './routes/user/inbox'
import { Route as UserDevicesRouteImport } from './routes/user/devices'
import { Route as DriverVehicleRouteImport } from './routes/driver/vehicle'
import { Route as DriverTripsRouteImport } from './routes/driver/trips'
import { Route as DriverSupportRouteImport } from './routes/driver/support'
import { Route as DriverScheduleRouteImport } from './routes/driver/schedule'
import { Route as DriverRequestsRouteImport } from './routes/driver/requests'
import { Route as DriverLocationRouteImport } from './routes/driver/location'
import { Route as DriverInboxRouteImport } from './routes/driver/inbox'
import { Route as DriverEarningsRouteImport } from './routes/driver/earnings'
import { Route as DriverDriverprofileRouteImport } from './routes/driver/driverprofile'
import { Route as DriverAllrequestRouteImport } from './routes/driver/allrequest'
import { Route as DashboardVehicleRouteImport } from './routes/dashboard/vehicle'
import { Route as DashboardUsersRouteImport } from './routes/dashboard/users'
import { Route as DashboardTripsRouteImport } from './routes/dashboard/trips'
import { Route as DashboardPromocodeRouteImport } from './routes/dashboard/promocode'
import { Route as DashboardPaymentsRouteImport } from './routes/dashboard/payments'
import { Route as DashboardInboxRouteImport } from './routes/dashboard/inbox'
import { Route as DashboardAnalyticsRouteImport } from './routes/dashboard/analytics'
import { Route as DashboardAdminprofileRouteImport } from './routes/dashboard/adminprofile'
import { Route as VehiclesVehiclesIdRouteImport } from './routes/Vehicles/$VehiclesId'
import { Route as DashboardTripsTripIdRouteImport } from './routes/dashboard/trips/$tripId'

const UserRoute = UserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRouteImport,
} as any)
const RequestsRoute = RequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentsRoute = PaymentsRouteImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentSuccessRoute = PaymentSuccessRouteImport.update({
  id: '/payment-success',
  path: '/payment-success',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentCancelRoute = PaymentCancelRouteImport.update({
  id: '/payment-cancel',
  path: '/payment-cancel',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DriverRoute = DriverRouteImport.update({
  id: '/driver',
  path: '/driver',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatbotRoute = ChatbotRouteImport.update({
  id: '/chatbot',
  path: '/chatbot',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const VehiclesRoute = VehiclesRouteImport.update({
  id: '/Vehicles',
  path: '/Vehicles',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserIndexRoute = UserIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserRoute,
} as any)
const DriverIndexRoute = DriverIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DriverRoute,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const ChatbotIndexRoute = ChatbotIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatbotRoute,
} as any)
const VehiclesIndexRoute = VehiclesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => VehiclesRoute,
} as any)
const UserWalletRoute = UserWalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => UserRoute,
} as any)
const UserUserprofileRoute = UserUserprofileRouteImport.update({
  id: '/userprofile',
  path: '/userprofile',
  getParentRoute: () => UserRoute,
} as any)
const UserTripsRoute = UserTripsRouteImport.update({
  id: '/trips',
  path: '/trips',
  getParentRoute: () => UserRoute,
} as any)
const UserSupportRoute = UserSupportRouteImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => UserRoute,
} as any)
const UserRidehistoryRoute = UserRidehistoryRouteImport.update({
  id: '/ridehistory',
  path: '/ridehistory',
  getParentRoute: () => UserRoute,
} as any)
const UserReviewsRoute = UserReviewsRouteImport.update({
  id: '/reviews',
  path: '/reviews',
  getParentRoute: () => UserRoute,
} as any)
const UserInboxRoute = UserInboxRouteImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => UserRoute,
} as any)
const UserDevicesRoute = UserDevicesRouteImport.update({
  id: '/devices',
  path: '/devices',
  getParentRoute: () => UserRoute,
} as any)
const DriverVehicleRoute = DriverVehicleRouteImport.update({
  id: '/vehicle',
  path: '/vehicle',
  getParentRoute: () => DriverRoute,
} as any)
const DriverTripsRoute = DriverTripsRouteImport.update({
  id: '/trips',
  path: '/trips',
  getParentRoute: () => DriverRoute,
} as any)
const DriverSupportRoute = DriverSupportRouteImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => DriverRoute,
} as any)
const DriverScheduleRoute = DriverScheduleRouteImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => DriverRoute,
} as any)
const DriverRequestsRoute = DriverRequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => DriverRoute,
} as any)
const DriverLocationRoute = DriverLocationRouteImport.update({
  id: '/location',
  path: '/location',
  getParentRoute: () => DriverRoute,
} as any)
const DriverInboxRoute = DriverInboxRouteImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => DriverRoute,
} as any)
const DriverEarningsRoute = DriverEarningsRouteImport.update({
  id: '/earnings',
  path: '/earnings',
  getParentRoute: () => DriverRoute,
} as any)
const DriverDriverprofileRoute = DriverDriverprofileRouteImport.update({
  id: '/driverprofile',
  path: '/driverprofile',
  getParentRoute: () => DriverRoute,
} as any)
const DriverAllrequestRoute = DriverAllrequestRouteImport.update({
  id: '/allrequest',
  path: '/allrequest',
  getParentRoute: () => DriverRoute,
} as any)
const DashboardVehicleRoute = DashboardVehicleRouteImport.update({
  id: '/vehicle',
  path: '/vehicle',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersRoute = DashboardUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardTripsRoute = DashboardTripsRouteImport.update({
  id: '/trips',
  path: '/trips',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardPromocodeRoute = DashboardPromocodeRouteImport.update({
  id: '/promocode',
  path: '/promocode',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardPaymentsRoute = DashboardPaymentsRouteImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardInboxRoute = DashboardInboxRouteImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAnalyticsRoute = DashboardAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminprofileRoute = DashboardAdminprofileRouteImport.update({
  id: '/adminprofile',
  path: '/adminprofile',
  getParentRoute: () => DashboardRoute,
} as any)
const VehiclesVehiclesIdRoute = VehiclesVehiclesIdRouteImport.update({
  id: '/$VehiclesId',
  path: '/$VehiclesId',
  getParentRoute: () => VehiclesRoute,
} as any)
const DashboardTripsTripIdRoute = DashboardTripsTripIdRouteImport.update({
  id: '/$tripId',
  path: '/$tripId',
  getParentRoute: () => DashboardTripsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Vehicles': typeof VehiclesRouteWithChildren
  '/about': typeof AboutRoute
  '/chatbot': typeof ChatbotRouteWithChildren
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/driver': typeof DriverRouteWithChildren
  '/login': typeof LoginRoute
  '/payment-cancel': typeof PaymentCancelRoute
  '/payment-success': typeof PaymentSuccessRoute
  '/payments': typeof PaymentsRoute
  '/register': typeof RegisterRoute
  '/requests': typeof RequestsRoute
  '/user': typeof UserRouteWithChildren
  '/Vehicles/$VehiclesId': typeof VehiclesVehiclesIdRoute
  '/dashboard/adminprofile': typeof DashboardAdminprofileRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/inbox': typeof DashboardInboxRoute
  '/dashboard/payments': typeof DashboardPaymentsRoute
  '/dashboard/promocode': typeof DashboardPromocodeRoute
  '/dashboard/trips': typeof DashboardTripsRouteWithChildren
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/vehicle': typeof DashboardVehicleRoute
  '/driver/allrequest': typeof DriverAllrequestRoute
  '/driver/driverprofile': typeof DriverDriverprofileRoute
  '/driver/earnings': typeof DriverEarningsRoute
  '/driver/inbox': typeof DriverInboxRoute
  '/driver/location': typeof DriverLocationRoute
  '/driver/requests': typeof DriverRequestsRoute
  '/driver/schedule': typeof DriverScheduleRoute
  '/driver/support': typeof DriverSupportRoute
  '/driver/trips': typeof DriverTripsRoute
  '/driver/vehicle': typeof DriverVehicleRoute
  '/user/devices': typeof UserDevicesRoute
  '/user/inbox': typeof UserInboxRoute
  '/user/reviews': typeof UserReviewsRoute
  '/user/ridehistory': typeof UserRidehistoryRoute
  '/user/support': typeof UserSupportRoute
  '/user/trips': typeof UserTripsRoute
  '/user/userprofile': typeof UserUserprofileRoute
  '/user/wallet': typeof UserWalletRoute
  '/Vehicles/': typeof VehiclesIndexRoute
  '/chatbot/': typeof ChatbotIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/driver/': typeof DriverIndexRoute
  '/user/': typeof UserIndexRoute
  '/dashboard/trips/$tripId': typeof DashboardTripsTripIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/login': typeof LoginRoute
  '/payment-cancel': typeof PaymentCancelRoute
  '/payment-success': typeof PaymentSuccessRoute
  '/payments': typeof PaymentsRoute
  '/register': typeof RegisterRoute
  '/requests': typeof RequestsRoute
  '/Vehicles/$VehiclesId': typeof VehiclesVehiclesIdRoute
  '/dashboard/adminprofile': typeof DashboardAdminprofileRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/inbox': typeof DashboardInboxRoute
  '/dashboard/payments': typeof DashboardPaymentsRoute
  '/dashboard/promocode': typeof DashboardPromocodeRoute
  '/dashboard/trips': typeof DashboardTripsRouteWithChildren
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/vehicle': typeof DashboardVehicleRoute
  '/driver/allrequest': typeof DriverAllrequestRoute
  '/driver/driverprofile': typeof DriverDriverprofileRoute
  '/driver/earnings': typeof DriverEarningsRoute
  '/driver/inbox': typeof DriverInboxRoute
  '/driver/location': typeof DriverLocationRoute
  '/driver/requests': typeof DriverRequestsRoute
  '/driver/schedule': typeof DriverScheduleRoute
  '/driver/support': typeof DriverSupportRoute
  '/driver/trips': typeof DriverTripsRoute
  '/driver/vehicle': typeof DriverVehicleRoute
  '/user/devices': typeof UserDevicesRoute
  '/user/inbox': typeof UserInboxRoute
  '/user/reviews': typeof UserReviewsRoute
  '/user/ridehistory': typeof UserRidehistoryRoute
  '/user/support': typeof UserSupportRoute
  '/user/trips': typeof UserTripsRoute
  '/user/userprofile': typeof UserUserprofileRoute
  '/user/wallet': typeof UserWalletRoute
  '/Vehicles': typeof VehiclesIndexRoute
  '/chatbot': typeof ChatbotIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/driver': typeof DriverIndexRoute
  '/user': typeof UserIndexRoute
  '/dashboard/trips/$tripId': typeof DashboardTripsTripIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Vehicles': typeof VehiclesRouteWithChildren
  '/about': typeof AboutRoute
  '/chatbot': typeof ChatbotRouteWithChildren
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/driver': typeof DriverRouteWithChildren
  '/login': typeof LoginRoute
  '/payment-cancel': typeof PaymentCancelRoute
  '/payment-success': typeof PaymentSuccessRoute
  '/payments': typeof PaymentsRoute
  '/register': typeof RegisterRoute
  '/requests': typeof RequestsRoute
  '/user': typeof UserRouteWithChildren
  '/Vehicles/$VehiclesId': typeof VehiclesVehiclesIdRoute
  '/dashboard/adminprofile': typeof DashboardAdminprofileRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/inbox': typeof DashboardInboxRoute
  '/dashboard/payments': typeof DashboardPaymentsRoute
  '/dashboard/promocode': typeof DashboardPromocodeRoute
  '/dashboard/trips': typeof DashboardTripsRouteWithChildren
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/vehicle': typeof DashboardVehicleRoute
  '/driver/allrequest': typeof DriverAllrequestRoute
  '/driver/driverprofile': typeof DriverDriverprofileRoute
  '/driver/earnings': typeof DriverEarningsRoute
  '/driver/inbox': typeof DriverInboxRoute
  '/driver/location': typeof DriverLocationRoute
  '/driver/requests': typeof DriverRequestsRoute
  '/driver/schedule': typeof DriverScheduleRoute
  '/driver/support': typeof DriverSupportRoute
  '/driver/trips': typeof DriverTripsRoute
  '/driver/vehicle': typeof DriverVehicleRoute
  '/user/devices': typeof UserDevicesRoute
  '/user/inbox': typeof UserInboxRoute
  '/user/reviews': typeof UserReviewsRoute
  '/user/ridehistory': typeof UserRidehistoryRoute
  '/user/support': typeof UserSupportRoute
  '/user/trips': typeof UserTripsRoute
  '/user/userprofile': typeof UserUserprofileRoute
  '/user/wallet': typeof UserWalletRoute
  '/Vehicles/': typeof VehiclesIndexRoute
  '/chatbot/': typeof ChatbotIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/driver/': typeof DriverIndexRoute
  '/user/': typeof UserIndexRoute
  '/dashboard/trips/$tripId': typeof DashboardTripsTripIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Vehicles'
    | '/about'
    | '/chatbot'
    | '/contact'
    | '/dashboard'
    | '/driver'
    | '/login'
    | '/payment-cancel'
    | '/payment-success'
    | '/payments'
    | '/register'
    | '/requests'
    | '/user'
    | '/Vehicles/$VehiclesId'
    | '/dashboard/adminprofile'
    | '/dashboard/analytics'
    | '/dashboard/inbox'
    | '/dashboard/payments'
    | '/dashboard/promocode'
    | '/dashboard/trips'
    | '/dashboard/users'
    | '/dashboard/vehicle'
    | '/driver/allrequest'
    | '/driver/driverprofile'
    | '/driver/earnings'
    | '/driver/inbox'
    | '/driver/location'
    | '/driver/requests'
    | '/driver/schedule'
    | '/driver/support'
    | '/driver/trips'
    | '/driver/vehicle'
    | '/user/devices'
    | '/user/inbox'
    | '/user/reviews'
    | '/user/ridehistory'
    | '/user/support'
    | '/user/trips'
    | '/user/userprofile'
    | '/user/wallet'
    | '/Vehicles/'
    | '/chatbot/'
    | '/dashboard/'
    | '/driver/'
    | '/user/'
    | '/dashboard/trips/$tripId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/login'
    | '/payment-cancel'
    | '/payment-success'
    | '/payments'
    | '/register'
    | '/requests'
    | '/Vehicles/$VehiclesId'
    | '/dashboard/adminprofile'
    | '/dashboard/analytics'
    | '/dashboard/inbox'
    | '/dashboard/payments'
    | '/dashboard/promocode'
    | '/dashboard/trips'
    | '/dashboard/users'
    | '/dashboard/vehicle'
    | '/driver/allrequest'
    | '/driver/driverprofile'
    | '/driver/earnings'
    | '/driver/inbox'
    | '/driver/location'
    | '/driver/requests'
    | '/driver/schedule'
    | '/driver/support'
    | '/driver/trips'
    | '/driver/vehicle'
    | '/user/devices'
    | '/user/inbox'
    | '/user/reviews'
    | '/user/ridehistory'
    | '/user/support'
    | '/user/trips'
    | '/user/userprofile'
    | '/user/wallet'
    | '/Vehicles'
    | '/chatbot'
    | '/dashboard'
    | '/driver'
    | '/user'
    | '/dashboard/trips/$tripId'
  id:
    | '__root__'
    | '/'
    | '/Vehicles'
    | '/about'
    | '/chatbot'
    | '/contact'
    | '/dashboard'
    | '/driver'
    | '/login'
    | '/payment-cancel'
    | '/payment-success'
    | '/payments'
    | '/register'
    | '/requests'
    | '/user'
    | '/Vehicles/$VehiclesId'
    | '/dashboard/adminprofile'
    | '/dashboard/analytics'
    | '/dashboard/inbox'
    | '/dashboard/payments'
    | '/dashboard/promocode'
    | '/dashboard/trips'
    | '/dashboard/users'
    | '/dashboard/vehicle'
    | '/driver/allrequest'
    | '/driver/driverprofile'
    | '/driver/earnings'
    | '/driver/inbox'
    | '/driver/location'
    | '/driver/requests'
    | '/driver/schedule'
    | '/driver/support'
    | '/driver/trips'
    | '/driver/vehicle'
    | '/user/devices'
    | '/user/inbox'
    | '/user/reviews'
    | '/user/ridehistory'
    | '/user/support'
    | '/user/trips'
    | '/user/userprofile'
    | '/user/wallet'
    | '/Vehicles/'
    | '/chatbot/'
    | '/dashboard/'
    | '/driver/'
    | '/user/'
    | '/dashboard/trips/$tripId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  VehiclesRoute: typeof VehiclesRouteWithChildren
  AboutRoute: typeof AboutRoute
  ChatbotRoute: typeof ChatbotRouteWithChildren
  ContactRoute: typeof ContactRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  DriverRoute: typeof DriverRouteWithChildren
  LoginRoute: typeof LoginRoute
  PaymentCancelRoute: typeof PaymentCancelRoute
  PaymentSuccessRoute: typeof PaymentSuccessRoute
  PaymentsRoute: typeof PaymentsRoute
  RegisterRoute: typeof RegisterRoute
  RequestsRoute: typeof RequestsRoute
  UserRoute: typeof UserRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/requests': {
      id: '/requests'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof RequestsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payments': {
      id: '/payments'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof PaymentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payment-success': {
      id: '/payment-success'
      path: '/payment-success'
      fullPath: '/payment-success'
      preLoaderRoute: typeof PaymentSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payment-cancel': {
      id: '/payment-cancel'
      path: '/payment-cancel'
      fullPath: '/payment-cancel'
      preLoaderRoute: typeof PaymentCancelRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/driver': {
      id: '/driver'
      path: '/driver'
      fullPath: '/driver'
      preLoaderRoute: typeof DriverRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chatbot': {
      id: '/chatbot'
      path: '/chatbot'
      fullPath: '/chatbot'
      preLoaderRoute: typeof ChatbotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Vehicles': {
      id: '/Vehicles'
      path: '/Vehicles'
      fullPath: '/Vehicles'
      preLoaderRoute: typeof VehiclesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/': {
      id: '/user/'
      path: '/'
      fullPath: '/user/'
      preLoaderRoute: typeof UserIndexRouteImport
      parentRoute: typeof UserRoute
    }
    '/driver/': {
      id: '/driver/'
      path: '/'
      fullPath: '/driver/'
      preLoaderRoute: typeof DriverIndexRouteImport
      parentRoute: typeof DriverRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/chatbot/': {
      id: '/chatbot/'
      path: '/'
      fullPath: '/chatbot/'
      preLoaderRoute: typeof ChatbotIndexRouteImport
      parentRoute: typeof ChatbotRoute
    }
    '/Vehicles/': {
      id: '/Vehicles/'
      path: '/'
      fullPath: '/Vehicles/'
      preLoaderRoute: typeof VehiclesIndexRouteImport
      parentRoute: typeof VehiclesRoute
    }
    '/user/wallet': {
      id: '/user/wallet'
      path: '/wallet'
      fullPath: '/user/wallet'
      preLoaderRoute: typeof UserWalletRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/userprofile': {
      id: '/user/userprofile'
      path: '/userprofile'
      fullPath: '/user/userprofile'
      preLoaderRoute: typeof UserUserprofileRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/trips': {
      id: '/user/trips'
      path: '/trips'
      fullPath: '/user/trips'
      preLoaderRoute: typeof UserTripsRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/support': {
      id: '/user/support'
      path: '/support'
      fullPath: '/user/support'
      preLoaderRoute: typeof UserSupportRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/ridehistory': {
      id: '/user/ridehistory'
      path: '/ridehistory'
      fullPath: '/user/ridehistory'
      preLoaderRoute: typeof UserRidehistoryRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/reviews': {
      id: '/user/reviews'
      path: '/reviews'
      fullPath: '/user/reviews'
      preLoaderRoute: typeof UserReviewsRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/inbox': {
      id: '/user/inbox'
      path: '/inbox'
      fullPath: '/user/inbox'
      preLoaderRoute: typeof UserInboxRouteImport
      parentRoute: typeof UserRoute
    }
    '/user/devices': {
      id: '/user/devices'
      path: '/devices'
      fullPath: '/user/devices'
      preLoaderRoute: typeof UserDevicesRouteImport
      parentRoute: typeof UserRoute
    }
    '/driver/vehicle': {
      id: '/driver/vehicle'
      path: '/vehicle'
      fullPath: '/driver/vehicle'
      preLoaderRoute: typeof DriverVehicleRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/trips': {
      id: '/driver/trips'
      path: '/trips'
      fullPath: '/driver/trips'
      preLoaderRoute: typeof DriverTripsRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/support': {
      id: '/driver/support'
      path: '/support'
      fullPath: '/driver/support'
      preLoaderRoute: typeof DriverSupportRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/schedule': {
      id: '/driver/schedule'
      path: '/schedule'
      fullPath: '/driver/schedule'
      preLoaderRoute: typeof DriverScheduleRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/requests': {
      id: '/driver/requests'
      path: '/requests'
      fullPath: '/driver/requests'
      preLoaderRoute: typeof DriverRequestsRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/location': {
      id: '/driver/location'
      path: '/location'
      fullPath: '/driver/location'
      preLoaderRoute: typeof DriverLocationRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/inbox': {
      id: '/driver/inbox'
      path: '/inbox'
      fullPath: '/driver/inbox'
      preLoaderRoute: typeof DriverInboxRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/earnings': {
      id: '/driver/earnings'
      path: '/earnings'
      fullPath: '/driver/earnings'
      preLoaderRoute: typeof DriverEarningsRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/driverprofile': {
      id: '/driver/driverprofile'
      path: '/driverprofile'
      fullPath: '/driver/driverprofile'
      preLoaderRoute: typeof DriverDriverprofileRouteImport
      parentRoute: typeof DriverRoute
    }
    '/driver/allrequest': {
      id: '/driver/allrequest'
      path: '/allrequest'
      fullPath: '/driver/allrequest'
      preLoaderRoute: typeof DriverAllrequestRouteImport
      parentRoute: typeof DriverRoute
    }
    '/dashboard/vehicle': {
      id: '/dashboard/vehicle'
      path: '/vehicle'
      fullPath: '/dashboard/vehicle'
      preLoaderRoute: typeof DashboardVehicleRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/trips': {
      id: '/dashboard/trips'
      path: '/trips'
      fullPath: '/dashboard/trips'
      preLoaderRoute: typeof DashboardTripsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/promocode': {
      id: '/dashboard/promocode'
      path: '/promocode'
      fullPath: '/dashboard/promocode'
      preLoaderRoute: typeof DashboardPromocodeRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/payments': {
      id: '/dashboard/payments'
      path: '/payments'
      fullPath: '/dashboard/payments'
      preLoaderRoute: typeof DashboardPaymentsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/inbox': {
      id: '/dashboard/inbox'
      path: '/inbox'
      fullPath: '/dashboard/inbox'
      preLoaderRoute: typeof DashboardInboxRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/adminprofile': {
      id: '/dashboard/adminprofile'
      path: '/adminprofile'
      fullPath: '/dashboard/adminprofile'
      preLoaderRoute: typeof DashboardAdminprofileRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/Vehicles/$VehiclesId': {
      id: '/Vehicles/$VehiclesId'
      path: '/$VehiclesId'
      fullPath: '/Vehicles/$VehiclesId'
      preLoaderRoute: typeof VehiclesVehiclesIdRouteImport
      parentRoute: typeof VehiclesRoute
    }
    '/dashboard/trips/$tripId': {
      id: '/dashboard/trips/$tripId'
      path: '/$tripId'
      fullPath: '/dashboard/trips/$tripId'
      preLoaderRoute: typeof DashboardTripsTripIdRouteImport
      parentRoute: typeof DashboardTripsRoute
    }
  }
}

interface VehiclesRouteChildren {
  VehiclesVehiclesIdRoute: typeof VehiclesVehiclesIdRoute
  VehiclesIndexRoute: typeof VehiclesIndexRoute
}

const VehiclesRouteChildren: VehiclesRouteChildren = {
  VehiclesVehiclesIdRoute: VehiclesVehiclesIdRoute,
  VehiclesIndexRoute: VehiclesIndexRoute,
}

const VehiclesRouteWithChildren = VehiclesRoute._addFileChildren(
  VehiclesRouteChildren,
)

interface ChatbotRouteChildren {
  ChatbotIndexRoute: typeof ChatbotIndexRoute
}

const ChatbotRouteChildren: ChatbotRouteChildren = {
  ChatbotIndexRoute: ChatbotIndexRoute,
}

const ChatbotRouteWithChildren =
  ChatbotRoute._addFileChildren(ChatbotRouteChildren)

interface DashboardTripsRouteChildren {
  DashboardTripsTripIdRoute: typeof DashboardTripsTripIdRoute
}

const DashboardTripsRouteChildren: DashboardTripsRouteChildren = {
  DashboardTripsTripIdRoute: DashboardTripsTripIdRoute,
}

const DashboardTripsRouteWithChildren = DashboardTripsRoute._addFileChildren(
  DashboardTripsRouteChildren,
)

interface DashboardRouteChildren {
  DashboardAdminprofileRoute: typeof DashboardAdminprofileRoute
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardInboxRoute: typeof DashboardInboxRoute
  DashboardPaymentsRoute: typeof DashboardPaymentsRoute
  DashboardPromocodeRoute: typeof DashboardPromocodeRoute
  DashboardTripsRoute: typeof DashboardTripsRouteWithChildren
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardVehicleRoute: typeof DashboardVehicleRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminprofileRoute: DashboardAdminprofileRoute,
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardInboxRoute: DashboardInboxRoute,
  DashboardPaymentsRoute: DashboardPaymentsRoute,
  DashboardPromocodeRoute: DashboardPromocodeRoute,
  DashboardTripsRoute: DashboardTripsRouteWithChildren,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardVehicleRoute: DashboardVehicleRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface DriverRouteChildren {
  DriverAllrequestRoute: typeof DriverAllrequestRoute
  DriverDriverprofileRoute: typeof DriverDriverprofileRoute
  DriverEarningsRoute: typeof DriverEarningsRoute
  DriverInboxRoute: typeof DriverInboxRoute
  DriverLocationRoute: typeof DriverLocationRoute
  DriverRequestsRoute: typeof DriverRequestsRoute
  DriverScheduleRoute: typeof DriverScheduleRoute
  DriverSupportRoute: typeof DriverSupportRoute
  DriverTripsRoute: typeof DriverTripsRoute
  DriverVehicleRoute: typeof DriverVehicleRoute
  DriverIndexRoute: typeof DriverIndexRoute
}

const DriverRouteChildren: DriverRouteChildren = {
  DriverAllrequestRoute: DriverAllrequestRoute,
  DriverDriverprofileRoute: DriverDriverprofileRoute,
  DriverEarningsRoute: DriverEarningsRoute,
  DriverInboxRoute: DriverInboxRoute,
  DriverLocationRoute: DriverLocationRoute,
  DriverRequestsRoute: DriverRequestsRoute,
  DriverScheduleRoute: DriverScheduleRoute,
  DriverSupportRoute: DriverSupportRoute,
  DriverTripsRoute: DriverTripsRoute,
  DriverVehicleRoute: DriverVehicleRoute,
  DriverIndexRoute: DriverIndexRoute,
}

const DriverRouteWithChildren =
  DriverRoute._addFileChildren(DriverRouteChildren)

interface UserRouteChildren {
  UserDevicesRoute: typeof UserDevicesRoute
  UserInboxRoute: typeof UserInboxRoute
  UserReviewsRoute: typeof UserReviewsRoute
  UserRidehistoryRoute: typeof UserRidehistoryRoute
  UserSupportRoute: typeof UserSupportRoute
  UserTripsRoute: typeof UserTripsRoute
  UserUserprofileRoute: typeof UserUserprofileRoute
  UserWalletRoute: typeof UserWalletRoute
  UserIndexRoute: typeof UserIndexRoute
}

const UserRouteChildren: UserRouteChildren = {
  UserDevicesRoute: UserDevicesRoute,
  UserInboxRoute: UserInboxRoute,
  UserReviewsRoute: UserReviewsRoute,
  UserRidehistoryRoute: UserRidehistoryRoute,
  UserSupportRoute: UserSupportRoute,
  UserTripsRoute: UserTripsRoute,
  UserUserprofileRoute: UserUserprofileRoute,
  UserWalletRoute: UserWalletRoute,
  UserIndexRoute: UserIndexRoute,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  VehiclesRoute: VehiclesRouteWithChildren,
  AboutRoute: AboutRoute,
  ChatbotRoute: ChatbotRouteWithChildren,
  ContactRoute: ContactRoute,
  DashboardRoute: DashboardRouteWithChildren,
  DriverRoute: DriverRouteWithChildren,
  LoginRoute: LoginRoute,
  PaymentCancelRoute: PaymentCancelRoute,
  PaymentSuccessRoute: PaymentSuccessRoute,
  PaymentsRoute: PaymentsRoute,
  RegisterRoute: RegisterRoute,
  RequestsRoute: RequestsRoute,
  UserRoute: UserRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
